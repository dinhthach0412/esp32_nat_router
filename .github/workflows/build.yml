name: Build ESP32-S3 firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget flex bison gperf python3 python3-pip python3-venv cmake ninja-build ccache dfu-util libusb-1.0-0-dev

    - name: Setup ESP-IDF
      run: |
        cd ~
        mkdir -p esp
        cd esp
        wget https://github.com/espressif/esp-idf/archive/v4.4.6.zip
        unzip v4.4.6.zip
        cd esp-idf-4.4.6
        ./install.sh esp32s3
        source ./export.sh
        echo "export IDF_PATH=~/esp/esp-idf-4.4.6" >> $GITHUB_ENV
        echo "source ~/esp/esp-idf-4.4.6/export.sh" >> $GITHUB_ENV
      shell: bash

    - name: Cache ESP-IDF
      uses: actions/cache@v4
      with:
        path: ~/esp
        key: ${{ runner.os }}-esp-idf-4.4.6-${{ hashFiles('~/esp/esp-idf-4.4.6/**') }}

    - name: Build project
      run: |
        source ~/esp/esp-idf-4.4.6/export.sh
        cd ${{ github.workspace }}
        idf.py set-target esp32s3
        idf.py build
      shell: bash

    - name: Package binaries
      if: success()
      run: |
        mkdir -p release
        cp build/bootloader/bootloader.bin release/ || true
        cp build/partition_table/partition-table.bin release/ || true
        cp build/esp32_nat_router.bin release/ || true
        cd release && zip -r ../firmware_artifacts.zip .
      shell: bash

    - name: Upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: esp32s3-firmware
        path: firmware_artifacts.zip
        retention-days: 30

    - name: Log build output
      if: always()
      run: |
        find . -name "build.log" -exec cat {} \; || echo "No build log found"
      shell: bash

